apiVersion: v1
kind: Namespace
metadata:
  name: develop
---
# Hello-World Application and Ingress
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: develop
spec:
  #replicas: 1
  replicas: 2
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
        - name: hello-world
          image: karthequian/helloworld:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 200m
              memory: 300Mi
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
  namespace: develop
  labels:
    app: hello-world
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  type: LoadBalancer
  selector:
    app: hello-world
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: hello-world-app
#   namespace: develop
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-production
#     kubernetes.io/ingress.class: nginx-internal
#     ingress.kubernetes.io/proxy-body-size: "1024m"
#     nginx.ingress.kubernetes.io/proxy-body-size: "1024m"
#     kubernetes.io/tls-acme: "true"
# spec:
#   ingressClassName: nginx-internal
#   tls:
#   - hosts:
#     - hello-world.maryam.relex.software
#     secretName: hello-world-app-tls
#   rules:
#   - host: hello-world.maryam.relex.software
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: hello-world
#             port:
#               number: 80